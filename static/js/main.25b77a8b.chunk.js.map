{"version":3,"sources":["utils/getCases.js","components/Footer.js","components/Layout.js","components/Header.js","components/Chart.js","components/ContainerCharts.js","components/Loading.js","components/PageLoading.js","components/PageError.js","App.js","index.js"],"names":["getCases","status","url","Promise","resolve","reject","a","fetch","response","data","json","getAllCases","confirmed","recovered","deaths","console","log","all","then","error","Footer","className","href","target","rel","Layout","props","children","Header","Chart","type","width","height","labels","map","item","Intl","DateTimeFormat","month","day","format","Date","datasets","label","Cases","borderColor","options","responsive","scales","xAxes","gridLines","display","ticks","beginAtZero","title","text","fontSize","padding","fontColor","legend","position","boxWidth","tooltips","backgroundColor","titleFontSize","xPadding","yPadding","bodyFontSize","bodySpacing","mode","elements","line","borderWidth","fill","point","totalConfirmed","length","totalRecovered","totalDeaths","arc","Container","ContainerCharts","charts","chart","key","Loading","PageLoading","PageError","message","App","state","loading","this","setState","fetchData","renderCharts","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25b77a8b.chunk.js","sourcesContent":["const baseURL = \"https://api.covid19api.com/country/venezuela/status/\";\n\n// const getCases = async (status) => {\n//   const url = `${baseURL}${status}/live`;\n//   try {\n//     const response = await fetch(url);\n//     const data = response.json();\n//     return data;\n//   } catch (error) {\n//     return error;\n//   }\n// };\n\nconst getCases = (status) => {\n  const url = `${baseURL}${status}/live`;\n  return new Promise(async (resolve, reject) => {\n    try {\n      const response = await fetch(url, {\n        \"Access-Control-Allow-Origin\": \"https://api.covid19api.com\",\n      });\n      const data = response.json();\n      resolve(data);\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\nconst getAllCases = async () => {\n  const confirmed = await getCases(\"confirmed\");\n  const recovered = await getCases(\"recovered\");\n  const deaths = await getCases(\"deaths\");\n  console.log({ confirmed, recovered, deaths });\n  return Promise.all([confirmed, recovered, deaths]).then(\n    (data) => {\n      return { confirmed: data[0], recovered: data[1], deaths: data[2] };\n    },\n    (error) => {\n      return error;\n    }\n  );\n};\n\nexport default getAllCases;\n","import React from \"react\";\n\nimport \"../assets/css/Footer.css\";\n\nconst Footer = () => {\n  return (\n    <>\n      <div className=\"Footer\">\n        <div>\n          <h1>\n            Designed with ‚ù§ by{\" \"}\n            <a\n              href=\"https://github.com/CodingLeonardo\"\n              target=\"_blank\"\n              className=\"Footer-link\"\n              rel=\"noopener noreferrer\"\n            >\n              @LeonardoCoding\n            </a>\n          </h1>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Footer from \"./Footer\";\n\nimport \"../assets/css/Layout.css\";\n\nconst Layout = (props) => {\n  const { children } = props;\n  return (\n    <div className=\"Layout\">\n      <div className=\"Layout-app\">\n        <div>{children}</div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\n\nimport \"../assets/css/Header.css\";\n\nconst Header = () => {\n  return (\n    <>\n      <div className=\"Header\">\n        <h1 className=\"Header-title\">\n          Covid-19 - <span className=\"Header-ven\">Ven</span>\n          <span className=\"Header-ezu\">ezu</span>\n          <span className=\"Header-ela\">ela</span>\n        </h1>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","import * as React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Pie } from \"react-chartjs-2\";\n\nconst Chart = (props) => {\n  const { data, type } = props;\n  const { confirmed, recovered, deaths } = data;\n\n  if (type === \"Line\") {\n    return (\n      <Line\n        width={0}\n        height={0}\n        data={{\n          labels: confirmed.map((item) =>\n            new Intl.DateTimeFormat(\"es-VE\", {\n              month: \"long\",\n              day: \"numeric\",\n            }).format(new Date(item.Date))\n          ),\n          datasets: [\n            {\n              label: \"Confirmados\",\n              data: confirmed.map((item) => item.Cases),\n              borderColor: \"#E8BF13\",\n            },\n            {\n              label: \"Recuperados\",\n              data: recovered.map((item) => item.Cases),\n              borderColor: \"#01113E\",\n            },\n            {\n              label: \"Muertes\",\n              data: deaths.map((item) => item.Cases),\n              borderColor: \"#A4061C\",\n            },\n          ],\n        }}\n        options={{\n          responsive: true,\n          scales: {\n            xAxes: [\n              {\n                gridLines: {\n                  display: false,\n                },\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            ],\n          },\n\n          title: {\n            display: true,\n            text: \"Todos los casos desde el primer reporte COVID-19 Venezuela\",\n            fontSize: 20,\n            padding: 30,\n            fontColor: \"#01113E\",\n          },\n          legend: {\n            position: \"bottom\",\n            labels: {\n              padding: 25,\n              boxWidth: 25,\n              fontColor: \"black\",\n            },\n          },\n          tooltips: {\n            backgroundColor: \"#072D95\",\n            titleFontSize: 20,\n            xPadding: 20,\n            yPadding: 20,\n            bodyFontSize: 15,\n            bodySpacing: 10,\n            mode: \"x-axis\",\n          },\n          elements: {\n            line: {\n              borderWidth: 4,\n              fill: false,\n            },\n            point: {\n              // radius: 4,\n              borderWidth: 2,\n              // hoverRadius: 6,\n              // hoverBorderWidth: 4,\n              backgroundColor: \"white\",\n            },\n          },\n        }}\n      />\n    );\n  }\n\n  if (type === \"Pie\") {\n    const totalConfirmed = confirmed[confirmed.length - 1].Cases;\n    const totalRecovered = recovered[recovered.length - 1].Cases;\n    const totalDeaths = deaths[deaths.length - 1].Cases;\n    console.log(totalConfirmed);\n    return (\n      <Pie\n        width={0}\n        height={0}\n        data={{\n          labels: [\"Confirmados\", \"Recuperados\", \"Muertes\"],\n          datasets: [\n            {\n              backgroundColor: [\"#E8BF13\", \"#01113E\", \"#A4061C\"],\n              borderColor: [\"#E8BF13\", \"#01113E\", \"#A4061C\"],\n              data: [totalConfirmed, totalRecovered, totalDeaths],\n            },\n          ],\n        }}\n        options={{\n          title: {\n            display: true,\n            text: \"Todos los casos totales de COVID-19 Venezuela\",\n            fontSize: 20,\n            padding: 30,\n            fontColor: \"#01113E\",\n          },\n          legend: {\n            position: \"bottom\",\n            labels: {\n              padding: 25,\n              boxWidth: 25,\n              fontColor: \"black\",\n            },\n          },\n          tooltips: {\n            backgroundColor: \"#072D95\",\n            titleFontSize: 20,\n            xPadding: 20,\n            yPadding: 20,\n            bodyFontSize: 15,\n            bodySpacing: 10,\n          },\n          elements: {\n            arc: {},\n          },\n        }}\n      />\n    );\n  }\n\n  return \"\";\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"./Chart\";\n\nimport \"../assets/css/ContainerCharts.css\";\n\nconst Container = (props) => {\n  const { children } = props;\n  return <div className=\"ContainerChart\">{children}</div>;\n};\n\nconst ContainerCharts = (props) => {\n  const { charts } = props;\n  return (\n    <div className=\"ContainerCharts\">\n      {charts.map((chart, key) => {\n        return (\n          <Container key={key}>\n            <Chart data={chart.data} type={chart.type} />\n          </Container>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ContainerCharts;\n","import React from \"react\";\n\nimport \"../assets/css/Loading.css\";\n\nconst Loading = () => {\n  return (\n    <>\n      <div className=\"sk-cube-grid\">\n        <div className=\"sk-cube sk-cube1\"></div>\n        <div className=\"sk-cube sk-cube2\"></div>\n        <div className=\"sk-cube sk-cube3\"></div>\n        <div className=\"sk-cube sk-cube4\"></div>\n        <div className=\"sk-cube sk-cube5\"></div>\n        <div className=\"sk-cube sk-cube6\"></div>\n        <div className=\"sk-cube sk-cube7\"></div>\n        <div className=\"sk-cube sk-cube8\"></div>\n        <div className=\"sk-cube sk-cube9\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport Loading from \"./Loading\";\n\nimport \"../assets/css/PageLoading.css\";\n\nconst PageLoading = () => {\n  return (\n    <>\n      <div className=\"PageLoading\">\n        <Loading />\n      </div>\n    </>\n  );\n};\n\nexport default PageLoading;\n","import React from \"react\";\n\nimport \"../assets/css/PageError.css\";\n\nconst PageError = (props) => {\n  const { message } = props;\n  return (\n    <>\n      <div className=\"PageError\">\n        <h1 className=\"PageError-message\">{message}</h1>\n      </div>\n    </>\n  );\n};\n\nexport default PageError;\n","import React, { Component } from \"react\";\nimport getCases from \"./utils/getCases\";\nimport Layout from \"./components/Layout\";\nimport Header from \"./components/Header\";\nimport ContainerCharts from \"./components/ContainerCharts\";\nimport PageLoading from \"./components/PageLoading\";\nimport LazyLoad from \"react-lazyload\";\nimport PageError from \"./components/PageError\";\nimport getAllCases from \"./utils/getCases\";\n\nclass App extends Component {\n  state = {\n    charts: [\"Line\", \"Pie\"],\n    data: {\n      confirmed: [],\n      recovered: [],\n      deaths: [],\n    },\n    loading: false,\n    error: null,\n  };\n\n  async fetchData() {\n    this.setState({ loading: true });\n    getAllCases().then(\n      (data) => {\n        this.setState({\n          loading: false,\n          data: {\n            confirmed: data.confirmed,\n            recovered: data.recovered,\n            deaths: data.deaths,\n          },\n        });\n      },\n      (error) => {\n        console.log(error);\n        this.setState({ loading: false, error: error });\n      }\n    );\n  }\n\n  renderCharts() {\n    if (this.state.loading) {\n      return <PageLoading />;\n    }\n    if (this.state.error) {\n      return <PageError message={this.state.error.message} />;\n    }\n    if (\n      !this.state.loading &&\n      this.state.data.confirmed.length > 0 &&\n      this.state.data.recovered.length > 0 &&\n      this.state.data.deaths.length > 0\n    ) {\n      return (\n        <LazyLoad>\n          <Header />\n          <ContainerCharts\n            charts={[\n              {\n                data: {\n                  confirmed: this.state.data.confirmed,\n                  recovered: this.state.data.recovered,\n                  deaths: this.state.data.deaths,\n                },\n                type: \"Line\",\n              },\n              {\n                data: {\n                  confirmed: this.state.data.confirmed,\n                  recovered: this.state.data.recovered,\n                  deaths: this.state.data.deaths,\n                },\n                type: \"Pie\",\n              },\n            ]}\n          />\n        </LazyLoad>\n      );\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    return (\n      <>\n        <Layout>{this.renderCharts()}</Layout>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./assets/css/index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n"],"sourceRoot":""}